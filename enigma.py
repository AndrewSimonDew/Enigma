from fernet import Fernet
import os

# Color codes
black = "\033[0;30m"
red = "\033[0;31m"
green = "\033[0;32m"
yellow = "\033[0;33m"
white = "\033[0;37m"
nocolor = "\033[0m"

# Title for Windows command prompt
os.system("title ENIGMA")

def main_screen():
    os.system("cls" if os.name == "nt" else "clear")
    print(f"""{red}

    .----------------.  .-----------------. .----------------.  .----------------.  .----------------.  .----------------. 
    | .--------------. || .--------------. || .--------------. || .--------------. || .--------------. || .--------------. |
    | |  _________   | || | ____  _____  | || |     _____    | || |    ______    | || | ____    ____ | || |      __      | |
    | | |_   ___  |  | || ||_   \|_   _| | || |    |_   _|   | || |  .' ___  |   | || ||_   \  /   _|| || |     /  \     | |
    | |   | |_  \_|  | || |  |   \ | |   | || |      | |     | || | / .'   \_|   | || |  |   \/   |  | || |    / /\ \    | |
    | |   |  _|  _   | || |  | |\ \| |   | || |      | |     | || | | |    ____  | || |  | |\  /| |  | || |   / ____ \   | |
    | |  _| |___/ |  | || | _| |_\   |_  | || |     _| |_    | || | \ `.___]  _| | || | _| |_\/_| |_ | || | _/ /    \ \_ | |
    | | |_________|  | || ||_____|\____| | || |    |_____|   | || |  `._____.'   | || ||_____||_____|| || ||____|  |____|| |
    | |              | || |              | || |              | || |              | || |              | || |              | |
    | '--------------' || '--------------' || '--------------' || '--------------' || '--------------' || '--------------' |
    '----------------'  '----------------'  '----------------'  '----------------'  '----------------'  '----------------' 



        {white}1: {red}ENCODE
        {white}2: {green}DECODE                                                                                                                                  
    """)
    opt = input(f"{red}: ")
    os.system("cls" if os.name == "nt" else "clear")
    if opt == "1":
        encode()
    elif opt == "2":
        decode()
    else:
        main_screen()

def encode():
    key = Fernet.generate_key()
    text_to = input(f"""

    .----------------.  .-----------------. .----------------.  .----------------.  .----------------.  .----------------. 
    | .--------------. || .--------------. || .--------------. || .--------------. || .--------------. || .--------------. |
    | |  _________   | || | ____  _____  | || |     _____    | || |    ______    | || | ____    ____ | || |      __      | |
    | | |_   ___  |  | || ||_   \|_   _| | || |    |_   _|   | || |  .' ___  |   | || ||_   \  /   _|| || |     /  \     | |
    | |   | |_  \_|  | || |  |   \ | |   | || |      | |     | || | / .'   \_|   | || |  |   \/   |  | || |    / /\ \    | |
    | |   |  _|  _   | || |  | |\ \| |   | || |      | |     | || | | |    ____  | || |  | |\  /| |  | || |   / ____ \   | |
    | |  _| |___/ |  | || | _| |_\   |_  | || |     _| |_    | || | \ `.___]  _| | || | _| |_\/_| |_ | || | _/ /    \ \_ | |
    | | |_________|  | || ||_____|\____| | || |    |_____|   | || |  `._____.'   | || ||_____||_____|| || ||____|  |____|| |
    | |              | || |              | || |              | || |              | || |              | || |              | |
    | '--------------' || '--------------' || '--------------' || '--------------' || '--------------' || '--------------' |
    '----------------'  '----------------'  '----------------'  '----------------'  '----------------'  '----------------' 
                             
    {yellow}                                                        ENCODING

    

{red}:""").strip()
    if text_to != "":
        f = Fernet(key)
        encoded = f.encrypt(text_to.encode('utf-8')).decode('utf-8')
        input(f"""{red}

    .----------------.  .-----------------. .----------------.  .----------------.  .----------------.  .----------------. 
    | .--------------. || .--------------. || .--------------. || .--------------. || .--------------. || .--------------. |
    | |  _________   | || | ____  _____  | || |     _____    | || |    ______    | || | ____    ____ | || |      __      | |
    | | |_   ___  |  | || ||_   \|_   _| | || |    |_   _|   | || |  .' ___  |   | || ||_   \  /   _|| || |     /  \     | |
    | |   | |_  \_|  | || |  |   \ | |   | || |      | |     | || | / .'   \_|   | || |  |   \/   |  | || |    / /\ \    | |
    | |   |  _|  _   | || |  | |\ \| |   | || |      | |     | || | | |    ____  | || |  | |\  /| |  | || |   / ____ \   | |
    | |  _| |___/ |  | || | _| |_\   |_  | || |     _| |_    | || | \ `.___]  _| | || | _| |_\/_| |_ | || | _/ /    \ \_ | |
    | | |_________|  | || ||_____|\____| | || |    |_____|   | || |  `._____.'   | || ||_____||_____|| || ||____|  |____|| |
    | |              | || |              | || |              | || |              | || |              | || |              | |
    | '--------------' || '--------------' || '--------------' || '--------------' || '--------------' || '--------------' |
    '----------------'  '----------------'  '----------------'  '----------------'  '----------------'  '----------------' 



        {white}PASSKEY: {red}{key.decode()}
        {white}ENCRYPTED: {green}{encoded}                                                                                                      
    """)
        input(f"{white}Press Enter to return to the main screen...")
        main_screen()

def decode():
    passkey = input(f"""

    .----------------.  .-----------------. .----------------.  .----------------.  .----------------.  .----------------. 
    | .--------------. || .--------------. || .--------------. || .--------------. || .--------------. || .--------------. |
    | |  _________   | || | ____  _____  | || |     _____    | || |    ______    | || | ____    ____ | || |      __      | |
    | | |_   ___  |  | || ||_   \|_   _| | || |    |_   _|   | || |  .' ___  |   | || ||_   \  /   _|| || |     /  \     | |
    | |   | |_  \_|  | || |  |   \ | |   | || |      | |     | || | / .'   \_|   | || |  |   \/   |  | || |    / /\ \    | |
    | |   |  _|  _   | || |  | |\ \| |   | || |      | |     | || | | |    ____  | || |  | |\  /| |  | || |   / ____ \   | |
    | |  _| |___/ |  | || | _| |_\   |_  | || |     _| |_    | || | \ `.___]  _| | || | _| |_\/_| |_ | || | _/ /    \ \_ | |
    | | |_________|  | || ||_____|\____| | || |    |_____|   | || |  `._____.'   | || ||_____||_____|| || ||____|  |____|| |
    | |              | || |              | || |              | || |              | || |              | || |              | |
    | '--------------' || '--------------' || '--------------' || '--------------' || '--------------' || '--------------' |
    '----------------'  '----------------'  '----------------'  '----------------'  '----------------'  '----------------' 
                             
    {yellow}                                                        DECODING

    

{red}PASSKEY:""").strip()
    os.system("cls" if os.name == "nt" else "clear")
    encoded = input(f"""

    .----------------.  .-----------------. .----------------.  .----------------.  .----------------.  .----------------. 
    | .--------------. || .--------------. || .--------------. || .--------------. || .--------------. || .--------------. |
    | |  _________   | || | ____  _____  | || |     _____    | || |    ______    | || | ____    ____ | || |      __      | |
    | | |_   ___  |  | || ||_   \|_   _| | || |    |_   _|   | || |  .' ___  |   | || ||_   \  /   _|| || |     /  \     | |
    | |   | |_  \_|  | || |  |   \ | |   | || |      | |     | || | / .'   \_|   | || |  |   \/   |  | || |    / /\ \    | |
    | |   |  _|  _   | || |  | |\ \| |   | || |      | |     | || | | |    ____  | || |  | |\  /| |  | || |   / ____ \   | |
    | |  _| |___/ |  | || | _| |_\   |_  | || |     _| |_    | || | \ `.___]  _| | || | _| |_\/_| |_ | || | _/ /    \ \_ | |
    | | |_________|  | || ||_____|\____| | || |    |_____|   | || |  `._____.'   | || ||_____||_____|| || ||____|  |____|| |
    | |              | || |              | || |              | || |              | || |              | || |              | |
    | '--------------' || '--------------' || '--------------' || '--------------' || '--------------' || '--------------' |
    '----------------'  '----------------'  '----------------'  '----------------'  '----------------'  '----------------' 
                             
    {yellow}                                                        DECODING

    

{green}STRING:""").strip()
    try:
        f = Fernet(passkey.encode('utf-8'))
        decrypted = f.decrypt(encoded.encode('utf-8')).decode('utf-8')
        print(f"\n{red}DECRYPTED: {green}{decrypted}\n")
    except Exception as e:
        print(f"\n{red}An error occurred: {e}\n")
    input(f"{white}Press Enter to return to the main screen...")
    main_screen()

if __name__ == "__main__":
    main_screen()
